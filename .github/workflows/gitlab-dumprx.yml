name: Firmware Dump

on:
  workflow_dispatch:
    inputs:
      FIRMWARE_LINK:
        description: 'Firmware Link'
        required: true
        default: ''

jobs:
  build:
    name: Dump by ${{ github.actor }}
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id
    permissions:
      contents: write
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Dump Environment
      run: |
        mkdir -p workspace && cd workspace
        git clone --depth=1 https://github.com/DumprX/DumprX.git ./dumprx
        cd dumprx && bash setup.sh

    - name: Dump Firmware
      run: |
        cd workspace/dumprx
        bash dumper.sh ${{ github.event.inputs.FIRMWARE_LINK }}

    - name: Set Variables
      run: |
        cd workspace/dumprx/out
        rm -rf .git
        echo "VENDOR_NAME=$(cat README.md | cut -d "-" -f 2 | grep -w "Codename" | head -n 1 | cut -d ":" -f 2 | cut -d " " -f 2)" >> $GITHUB_ENV
        echo "MANUFACTURER_NAME=$(cat README.md | cut -d "-" -f 2 | grep -w "Manufacturer" | head -n 1 | cut -d ":" -f 2 | cut -d " " -f 2)" >> $GITHUB_ENV
        echo "BRANCH=$(cat README.md | cut -d "-" -f 2 | grep -w "Id" | head -n 1 | cut -d ":" -f 2 | cut -d " " -f 2)" >> $GITHUB_ENV
        echo "DUMP_DIR_LIST=$(find -type d -printf "%P\n" | grep -v / | grep -v .git)" >> $GITHUB_ENV

    - name: Push as Repository
      run: |
        cd workspace/dumprx/out
        rm -rf .git
        git init
        git config --global user.name "Carlo Dandan"
        git config --global user.email "carlodandan.personal@proton.me"
        for dir in ${{ env.DUMP_DIR_LIST }}; do
            git add ${dir}
            git commit -s -m "dump: ${dir}: import dump for ${VENDOR_NAME}
            Firmware: ${{ github.event.inputs.FIRMWARE_LINK }}"
        done
        git add .
        git commit -s -m "dump: import remaining dump for ${VENDOR_NAME}
        Firmware: ${{ github.event.inputs.FIRMWARE_LINK }}"
        git remote add origin https://${{ secrets.GITLAB_TOKEN_NAME }}:${{ secrets.GITLAB_TOKEN }}@gitlab.com/android_dump_${{ env.MANUFACTURER_NAME }}_${{ env.VENDOR_NAME }}.git
        curl --header "PRIVATE-TOKEN: ${{ secrets.GITLAB_TOKEN }}" -X POST "https://gitlab.com/api/v4/projects?name=android_dump_${{ env.MANUFACTURER_NAME }}_${{ env.VENDOR_NAME }}&visibility=public"
        git branch -M ${{ env.BRANCH }}
        git push -u origin ${{ env.BRANCH }}
